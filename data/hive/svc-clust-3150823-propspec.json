{
    "_id": "type.42",
    "name": "svc-clust",
    "title": "Hierarchical clustering engine",
    "descr": "Hierarchical clustering tool for alignment profiling results",
    "__is_prefetch": true,
    "__is_user": true,
    "__parents": [ "svc-computations-base" ],
    "_field": {
        "name": {
            "_type": "string",
            "title": "Name",
            "descr": "Provide an identifiable name for the process.",
            "_order": -100,
            "_write": true,
            "_vital": true,
            "_public": true,
            "brief": "$_(v)",
            "__definer_type": "process"
        },
        "_brief": {
            "_type": "string",
            "title": "Summary",
            "_order": 0,
            "_write": false,
            "_vital": true,
            "_hidden": true,
            "_virtual": true,
            "_role": "state"
        },
        "_dir": {
            "_type": "string",
            "title": "Location",
            "_order": 0,
            "_write": false,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_hidden": true,
            "_virtual": true,
            "_role": "state",
            "_weakref": true
        },
        "_domain": {
            "_type": "json",
            "title": "Create in domain",
            "_order": 0,
            "_write": "once",
            "_vital": true,
            "_hidden": true,
            "_virtual": true,
            "_role": "state"
        },
        "_effperm": {
            "_type": "json",
            "title": "Effective permissions",
            "_order": 0,
            "_write": false,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_hidden": true,
            "_virtual": true,
            "_role": "state"
        },
        "_parent": {
            "_type": "hiveid",
            "title": "Parent object",
            "_order": 0,
            "_write": false,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_hidden": true,
            "_virtual": true,
            "_role": "state",
            "_weakref": true
        },
        "_perm": {
            "_type": "string",
            "title": "Permissions",
            "_order": 0,
            "_write": false,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_hidden": true,
            "_virtual": true,
            "_role": "state"
        },
        "_type": {
            "_type": "string",
            "title": "Type name",
            "_order": 0,
            "_write": "once",
            "_vital": true,
            "_hidden": true,
            "_virtual": true,
            "_role": "state"
        },
        "base_tag": {
            "_type": "string",
            "title": "Tag",
            "descr": "A tag, keyword, anything to mark an object",
            "_order": 0,
            "_write": true,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_hidden": true,
            "__definer_type": "base_user_type"
        },
        "batch": {
            "_layout": "struct",
            "title": "Batch Description",
            "_order": 0,
            "_write": true,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "__definer_type": "process",
            "_field": {
                "batch_list": {
                    "_layout": "table",
                    "title": "Parameter list",
                    "_order": 1,
                    "_write": true,
                    "_vital": true,
                    "__definer_type": "process",
                    "_field": {
                        "batch_param": {
                            "_type": "string",
                            "title": "Parameter",
                            "_order": 0,
                            "_write": true,
                            "_vital": true,
                            "_plural": true,
                            "_limit": {
                                "choice": []
                            },
                            "__definer_type": "process"
                        },
                        "batch_value": {
                            "_type": "int",
                            "title": "Value",
                            "_order": 0,
                            "_write": true,
                            "_vital": true,
                            "__definer_type": "process"
                        }
                    }
                },
                "batch_saturated": {
                    "_type": "bool",
                    "title": "Saturated",
                    "descr": "Whether to force every batch for this list to contain at least one value from every parameter.",
                    "_order": 2,
                    "_write": true,
                    "_vital": true,
                    "__definer_type": "process"
                }
            }
        },
        "batch_children_proc_ids": {
            "_type": "hiveid",
            "title": "Batch submitted processes",
            "descr": "Processes created by batch submission",
            "_order": 0,
            "_write": "onlyauto",
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_role": "output",
            "_limit": {
                "type": "svc-proc"
            },
            "__definer_type": "process"
        },
        "batch_ignore_errors": {
            "_type": "bool",
            "title": "Ignore errors in individual submitted processes",
            "descr": "Continue batching even if some batched computations could not be launched",
            "_order": 0,
            "_write": true,
            "_vital": true,
            "__definer_type": "process"
        },
        "batch_svc": {
            "_type": "string",
            "title": "Batch Service",
            "descr": "Determines if this tool should be run in single mode (one submission) or batch mode (multiple submissions).  NOTE: setting this option will clear other fields entered into the form.",
            "_order": 0,
            "_write": "noresub",
            "_vital": true,
            "_limit": {
                "choice+": [
                    {
                        "title": "Single Mode",
                        "value": "single"
                    }
                ]
            },
            "__definer_type": "process"
        },
        "children_proc_ids": {
            "_type": "hiveid",
            "title": "Children Processes",
            "_order": 0,
            "_write": "onlyauto",
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_role": "output",
            "_limit": {
                "type": "svc-proc"
            },
            "__definer_type": "process"
        },
        "created": {
            "_type": "datetime",
            "title": "Created",
            "_order": 0,
            "_write": false,
            "_vital": true,
            "_role": "state",
            "__definer_type": "base"
        },
        "modified": {
            "_type": "datetime",
            "title": "Modified",
            "_order": 0,
            "_write": false,
            "_vital": true,
            "_role": "state",
            "__definer_type": "base"
        },
        "parent_proc_ids": {
            "_type": "hiveid",
            "title": "Parent Processes",
            "_order": 0,
            "_write": true,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_hidden": true,
            "_limit": {
                "type": "process+"
            },
            "__definer_type": "process"
        },
        "random_seed": {
            "_type": "int",
            "_default": 0,
            "title": "Random Seed",
            "_order": 0,
            "_write": true,
            "_vital": false,
            "__definer_type": "process"
        },
        "scissors": {
            "_type": "string",
            "_default": "hiveseq",
            "title": "How to split the sequences",
            "descr": "The way large jobs are split into smaller pieces",
            "_order": 0,
            "_write": true,
            "_vital": false,
            "_hidden": true,
            "_limit": {
                "choice": [
                    {
                        "title": "By the number of sequences",
                        "value": "hiveseq"
                    },
                    {
                        "title": "By the number of alignments",
                        "value": "hiveal"
                    }
                ]
            },
            "__definer_type": "process"
        },
        "split": {
            "_type": "string",
            "_default": "query",
            "title": "What field contains the object spliting the jobs",
            "_order": 0,
            "_write": true,
            "_vital": false,
            "__definer_type": "process"
        },
        "splitList": {
            "_layout": "struct",
            "title": "Split process into smaller chunks",
            "_order": 0,
            "_write": true,
            "_vital": true,
            "__flattened_decor": true,
            "_hidden": true,
            "__definer_type": "process",
            "_field": {
                "nrepeat": {
                    "_type": "int",
                    "_default": 1,
                    "title": "Number of Computational Threads",
                    "_order": 0,
                    "_write": true,
                    "_vital": true,
                    "_hidden": true,
                    "_limit": {
                        "eval": "!isNaN(\"${_val}\")",
                        "descr": "Give a Number"
                    },
                    "__definer_type": "process"
                },
                "slice": {
                    "_type": "int",
                    "_default": 500000,
                    "title": "Number of Computational Subjects per Single Thread",
                    "_order": 0,
                    "_write": true,
                    "_vital": false,
                    "_hidden": true,
                    "_limit": {
                        "eval": "!isNaN(\"${_val}\")",
                        "descr": "Give a Number"
                    },
                    "__definer_type": "process"
                },
                "splitField": {
                    "_type": "string",
                    "title": "Split based on specified field(s)",
                    "_order": 0,
                    "_write": true,
                    "_vital": true,
                    "__definer_type": "process"
                },
                "splitSize": {
                    "_type": "int",
                    "title": "Size of each chunk",
                    "_order": 0,
                    "_write": true,
                    "_vital": true,
                    "__definer_type": "process"
                },
                "splitType": {
                    "_type": "string",
                    "title": "Splitting function",
                    "_order": 0,
                    "_write": true,
                    "_vital": true,
                    "_limit": {
                        "choice": [
                            {
                                "title": "Number of lines in a file",
                                "value": "file"
                            },
                            {
                                "title": "Multiplier",
                                "value": "multiplier"
                            },
                            {
                                "title": "Number of files in archive",
                                "value": "archive"
                            },
                            {
                                "title": "Number of elements in a range",
                                "value": "list"
                            },
                            {
                                "title": "Number of sequences",
                                "value": "sequences"
                            },
                            {
                                "title": "Number of alignments",
                                "value": "alignments"
                            }
                        ]
                    },
                    "__definer_type": "process"
                }
            }
        },
        "system": {
            "_layout": "struct",
            "title": "System",
            "_order": 0,
            "_write": true,
            "_vital": false,
            "__flattened_decor": true,
            "__definer_type": "process",
            "_field": {
                "action": {
                    "_type": "int",
                    "title": "Action for Request",
                    "_order": 0,
                    "_write": true,
                    "_vital": false,
                    "_hidden": true,
                    "_limit": {
                        "choice": [
                            {
                                "title": "Unknown",
                                "value": 0
                            },
                            {
                                "title": "Hold",
                                "value": 1
                            },
                            {
                                "title": "Run",
                                "value": 2
                            },
                            {
                                "title": "Terminate",
                                "value": 3
                            },
                            {
                                "title": "Suspend",
                                "value": 4
                            },
                            {
                                "title": "Resume",
                                "value": 5
                            }
                        ]
                    },
                    "__definer_type": "process"
                },
                "completed": {
                    "_type": "datetime",
                    "title": "Completed",
                    "_order": 0,
                    "_write": "onlyauto",
                    "_vital": false,
                    "_role": "state",
                    "__definer_type": "process"
                },
                "folder": {
                    "_type": "string",
                    "_default": "eval:typeof(user_get_curdir_save)!==\"undefined\"?user_get_curdir_save():\"\"",
                    "title": "Destination folder",
                    "_order": 0,
                    "_write": true,
                    "_vital": true,
                    "_virtual": true,
                    "_weakref": true,
                    "_limit": {
                        "type": "folder+"
                    },
                    "__definer_type": "process"
                },
                "isPostponed": {
                    "_type": "bool",
                    "_default": 0,
                    "title": "Postpone execution",
                    "descr": "Launch job in suspended state, you will need to manually launching later",
                    "_order": 0,
                    "_write": true,
                    "_vital": false,
                    "__definer_type": "process"
                },
                "onUserBehalf": {
                    "_type": "int",
                    "title": "On Behalf of The User",
                    "_order": 0,
                    "_write": true,
                    "_vital": true,
                    "_limit": {
                        "search": {
                            "url": "http://?cmd=usrList&active=1&grp=0&primaryGrpOnly=1&raw=1",
                            "value": "id",
                            "title": "name",
                            "show": [ "name" ],
                            "format": "csv"
                        }
                    },
                    "__definer_type": "process"
                },
                "progress": {
                    "_type": "int",
                    "title": "Progress",
                    "_order": 0,
                    "_write": "onlyauto",
                    "_vital": false,
                    "_role": "state",
                    "__definer_type": "process"
                },
                "reqID": {
                    "_type": "int",
                    "title": "Request ID",
                    "_order": 0,
                    "_write": "onlyauto",
                    "_vital": false,
                    "_role": "state",
                    "__definer_type": "process"
                },
                "reqPriority": {
                    "_type": "int",
                    "_default": 0,
                    "title": "Priority of submission",
                    "_order": 0,
                    "_write": true,
                    "_vital": true,
                    "_role": "state",
                    "_limit": {
                        "choice": [
                            {
                                "title": "normal - execute ASAP in collaborative environment",
                                "value": 0
                            },
                            {
                                "title": "polite submission - let other users small computations to squeeze through",
                                "value": 100
                            },
                            {
                                "title": "large submissions - do not compete with small and medium computations",
                                "value": 1000
                            },
                            {
                                "title": "extremely nice - execute only when most computers are not busy",
                                "value": 1000000
                            }
                        ]
                    },
                    "__definer_type": "process"
                },
                "started": {
                    "_type": "datetime",
                    "title": "Started",
                    "_order": 0,
                    "_write": "onlyauto",
                    "_vital": false,
                    "_role": "state",
                    "__definer_type": "process"
                },
                "status": {
                    "_type": "int",
                    "title": "Status",
                    "_order": 0,
                    "_write": "onlyauto",
                    "_vital": false,
                    "_role": "state",
                    "_limit": {
                        "choice": [
                            {
                                "title": "Unknown",
                                "value": 0
                            },
                            {
                                "title": "Waiting",
                                "value": 1
                            },
                            {
                                "title": "Processing",
                                "value": 2
                            },
                            {
                                "title": "Running",
                                "value": 3
                            },
                            {
                                "title": "Suspended",
                                "value": 4
                            },
                            {
                                "title": "Done",
                                "value": 5
                            },
                            {
                                "title": "Killed",
                                "value": 6
                            },
                            {
                                "title": "ProgError",
                                "value": 7
                            },
                            {
                                "title": "SysError",
                                "value": 8
                            }
                        ]
                    },
                    "__definer_type": "process"
                },
                "svc": {
                    "_type": "string",
                    "title": "Service ID",
                    "_order": 0,
                    "_write": "onlyauto",
                    "_vital": false,
                    "__definer_type": "process"
                },
                "systemVersion": {
                    "_type": "string",
                    "_default": "eval:gSysVersion",
                    "title": "System version number",
                    "_order": 0,
                    "_write": "onlyauto",
                    "_vital": false,
                    "__definer_type": "process"
                },
                "svcTitle": {
                    "_type": "string",
                    "title": "Service Title",
                    "_order": 2,
                    "_write": "onlyauto",
                    "_vital": false,
                    "brief": "<b>$_(v)</b>",
                    "__definer_type": "process"
                },
                "progress100": {
                    "_type": "int",
                    "title": "Progress %",
                    "_order": 3,
                    "_write": "onlyauto",
                    "_vital": false,
                    "_role": "state",
                    "brief": "$_(v)%",
                    "__definer_type": "process"
                }
            }
        },
        "referenceID": {
            "_type": "hiveid",
            "title": "Reference genome",
            "_order": 1,
            "_write": "once",
            "_vital": false,
            "_plural": true,
            "__flattened_multi": true,
            "_limit": {
                "type": "genome"
            }
        },
        "profileID": {
            "_type": "hiveid",
            "title": "HIVE-Heptagon profiling results to compare",
            "_order": 3,
            "_write": "once",
            "_vital": false,
            "_plural": true,
            "__flattened_multi": true,
            "_limit": {
                "type": "svc-profiler"
            }
        },
        "algorithm": {
            "_type": "string",
            "_default": "neighbor-joining",
            "title": "Clustering algorithm",
            "_order": 4,
            "_write": "once",
            "_vital": false,
            "_limit": {
                "choice": [
                    {
                        "title": "Single link",
                        "value": "single-link"
                    },
                    {
                        "title": "Complete link",
                        "value": "complete-link"
                    },
                    {
                        "title": "Neighbor joining",
                        "value": "neighbor-joining"
                    },
                    {
                        "title": "Fast neighbor joining",
                        "value": "fast-neighbor-joining"
                    },
                    {
                        "title": "Do not cluster, only calculate shrunk sequences",
                        "value": "shrunk-only"
                    }
                ]
            }
        },
        "distance": {
            "_type": "string",
            "_default": "euclidean",
            "title": "Distance function",
            "_order": 5,
            "_write": "once",
            "_vital": false,
            "_limit": {
                "choice": [
                    {
                        "title": "Euclidean distance",
                        "value": "euclidean"
                    },
                    {
                        "title": "Manhattan distance",
                        "value": "manhattan"
                    },
                    {
                        "title": "Maximum distance",
                        "value": "maximum"
                    },
                    {
                        "title": "p-Norm",
                        "value": "pnorm"
                    },
                    {
                        "title": "Canberra distance",
                        "value": "canberra"
                    },
                    {
                        "title": "Cosine similarity",
                        "value": "cosine"
                    },
                    {
                        "title": "Pearson correlation coefficient",
                        "value": "pearson"
                    }
                ]
            }
        },
        "distanceParamsGroup": {
            "_layout": "struct",
            "title": "Distance function parameters",
            "_order": 6,
            "_write": true,
            "_vital": false,
            "__flattened_decor": true,
            "_field": {
                "pValue": {
                    "_type": "real",
                    "_default": 2.0,
                    "title": "p",
                    "_order": 7,
                    "_write": "once",
                    "_vital": false,
                    "_limit": {
                        "range": {
                            "min": 1,
                            "max": 2147483647
                        }
                    }
                },
                "pearsonSquared": {
                    "_type": "bool",
                    "_default": 0,
                    "title": "Pearson squared",
                    "_order": 8,
                    "_write": "once",
                    "_vital": false
                },
                "pearsonUncentered": {
                    "_type": "bool",
                    "_default": 0,
                    "title": "Pearson uncentered",
                    "_order": 9,
                    "_write": "once",
                    "_vital": false
                }
            }
        },
        "noise": {
            "_type": "string",
            "_default": "auto",
            "title": "Noise filtering for unfiltered profiling data",
            "descr": "Only applies to profiles which were not already noise filtered",
            "_order": 10,
            "_write": "once",
            "_vital": false,
            "_limit": {
                "choice": [
                    {
                        "title": "Automatically filter 95% noise",
                        "value": "auto"
                    },
                    {
                        "title": "Do not filter noise",
                        "value": "none"
                    }
                ]
            }
        },
        "subjects": {
            "_type": "int",
            "title": "Reference genes",
            "_order": 11,
            "_write": "once",
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "_limit": {
                "search": {
                    "url": "static://",
                    "value": "#",
                    "title": "\"#\"",
                    "show": [ {
                            "name": "#",
                            "title": "ID",
                            "hidden": 0
                        }, {
                            "name": "len",
                            "title": "Length",
                            "hidden": 0
                        }, {
                            "name": "id",
                            "title": "Name",
                            "hidden": 0
                        } ],
                    "format": "csv"
                }
            }
        },
        "incompleteSubjects": {
            "_type": "string",
            "_default": "skip",
            "title": "References with incomplete profiling data",
            "descr": "How to treat those references that are missing from some of the selected profiled sequences",
            "_order": 12,
            "_write": "once",
            "_vital": false,
            "_limit": {
                "choice": [
                    {
                        "title": "Treat missing data as SNP-free",
                        "value": "zero"
                    },
                    {
                        "title": "Skip in calculation",
                        "value": "skip"
                    }
                ]
            }
        },
        "minCoverage": {
            "_type": "int",
            "_default": 0,
            "title": "Minimum coverage",
            "_order": 13,
            "_write": "once",
            "_vital": false,
            "_limit": {
                "eval": "${_val} >= 0"
            }
        },
        "thresholdGroup": {
            "_layout": "struct",
            "title": "SNP frequency range to consider",
            "_order": 14,
            "_write": true,
            "_vital": false,
            "__flattened_decor": true,
            "_field": {
                "minThresholdPercent": {
                    "_type": "real",
                    "_default": 0,
                    "title": "Minimum (%)",
                    "_order": 15,
                    "_write": "once",
                    "_vital": false,
                    "_limit": {
                        "eval": "${_val} >= 0 && ${_val} <= 100"
                    }
                },
                "maxThresholdPercent": {
                    "_type": "real",
                    "_default": 100,
                    "title": "Maximum (%)",
                    "_order": 16,
                    "_write": "once",
                    "_vital": false,
                    "_limit": {
                        "eval": "${_val} > 0 && ${_val} <= 100"
                    }
                },
                "thresholdExceptionGroup": {
                    "_layout": "struct",
                    "title": "Exceptions",
                    "_order": 17,
                    "_write": true,
                    "_vital": false,
                    "__flattened_decor": true,
                    "_field": {
                        "thresholdAny": {
                            "_type": "bool",
                            "_default": 1,
                            "title": "All profiles as long as one profile meets constraint",
                            "descr": "Include SNP frequency data from all profiles at a given position as long as the SNP frequency for at least one profile at that position met frequency range constraints",
                            "_order": 18,
                            "_write": "once",
                            "_vital": false
                        },
                        "thresholdWindow": {
                            "_type": "int",
                            "_default": 0,
                            "title": "Position range &plusmn; around position that meets constraint",
                            "descr": "Include SNP frequency data at all positions within a certain delta of a position that met frequency range constraints",
                            "_order": 19,
                            "_write": "once",
                            "_vital": false,
                            "_limit": {
                                "eval": "${_val} >= 0"
                            }
                        }
                    }
                },
                "saveShrunk": {
                    "_type": "bool",
                    "_default": 0,
                    "title": "Save generated shrunk sequences",
                    "descr": "Save the subsequences that satisfy the threshold as files to allow them to be downloaded and analyzed using external tools",
                    "_order": 22,
                    "_write": "once",
                    "_vital": false
                },
                "saveShrunkSNPClass": {
                    "_type": "bool",
                    "_default": 0,
                    "title": "<b>experimental</b> Save shrunk SNP table for classification analysis",
                    "_order": 23,
                    "_write": "once",
                    "_vital": false
                },
                "saveShrunkSNPPos": {
                    "_type": "bool",
                    "_default": 0,
                    "title": "<b>experimental</b> Save shrunk SNP table for per-position analysis",
                    "_order": 24,
                    "_write": "once",
                    "_vital": false
                },
                "saveShrunkSNPClassGroup": {
                    "_layout": "struct",
                    "title": "Shrunk SNP for classification",
                    "_order": 25,
                    "_write": true,
                    "_vital": false,
                    "__flattened_decor": true,
                    "_field": {
                        "saveShrunkSNPClassCellType": {
                            "_type": "string",
                            "_default": "frequency",
                            "title": "Classification data",
                            "_order": 27,
                            "_write": true,
                            "_vital": false,
                            "_limit": {
                                "choice": [ "frequency", "coverage" ]
                            }
                        },
                        "saveShrunkSNPClassColType": {
                            "_type": "string",
                            "_default": "position",
                            "title": "Classification columns",
                            "_order": 28,
                            "_write": true,
                            "_vital": false,
                            "_limit": {
                                "choice": [
                                    {
                                        "title": "positions",
                                        "value": "position"
                                    },
                                    {
                                        "title": "A, T, G, C for each position",
                                        "value": "atgc"
                                    },
                                    {
                                        "title": "A, T, G, C, ins, del for each position",
                                        "value": "atgcindel"
                                    }
                                ]
                            }
                        },
                        "saveShrunkSNPClassProfilesTitle": {
                            "_type": "string",
                            "_default": "profile",
                            "title": "Title for profiles column",
                            "_order": 29,
                            "_write": true,
                            "_vital": false
                        },
                        "saveShrunkSNPClassColLabelTemplate": {
                            "_type": "string",
                            "title": "Custom position column titles template",
                            "descr": "You can use the following variables: $(isub) = index of reference; $(id) = name of reference; $(position) = position in genome; $(letter) = letter (A, T, G, C, ins, del).",
                            "_order": 30,
                            "_write": true,
                            "_vital": true
                        }
                    }
                }
            }
        },
        "algorithmGroup": {
            "_layout": "struct",
            "title": "Additional algorithm parameters",
            "_order": 20,
            "_write": true,
            "_vital": false,
            "__flattened_decor": true,
            "_hidden": true,
            "_field": {
                "SNPCompareAlgorithm": {
                    "_type": "int",
                    "_default": 2,
                    "title": "SNP Comparison Algorithm",
                    "_order": 21,
                    "_write": "once",
                    "_vital": false,
                    "_hidden": true,
                    "_limit": {
                        "choice": [
                            {
                                "title": "Compare Consensus",
                                "value": 0
                            },
                            {
                                "title": "Frequency Cutoff",
                                "value": 1
                            },
                            {
                                "title": "Compare two most frequent bases",
                                "value": 2
                            }
                        ]
                    }
                }
            }
        },
        "comment": {
            "_type": "text",
            "title": "Comments",
            "descr": "Comment field for arbitrary descriptive information associated with this process",
            "_order": 30,
            "_write": true,
            "_vital": true,
            "_plural": true,
            "__flattened_multi": true,
            "__definer_type": "process"
        },
        "profileLabelTemplate": {
            "_type": "string",
            "title": "Custom per-profile label template",
            "descr": "You can use the following variables: $(profile) = profiler object.",
            "_order": 31,
            "_write": true,
            "_vital": true
        },
        "submitter": {
            "_type": "string",
            "title": "Submitting Template Page",
            "_order": 1003.1,
            "_write": true,
            "_vital": true,
            "_hidden": true,
            "__definer_type": "process"
        }
    }
}