/*

  This file defines the expected format of datatypes, as described in the BioCompute Object specification:

    http://tinyurl.com/bco-spec

  These definitions are used to validate the bco-datatypes.json file, which is used in turn to validate BCO files.

  For brevity and ease of understanding, the following default values are used:
    
    required: 0 (optional)

*/

{
   "type": {
    "desc": "Datatype of the specification field",
    "datatype": "string"
  },
 
  "is_multi": {
    "desc": "Whether or not the attribute is an array/hash (list/object) or a string (true = array/hash, false = string)",
    "datatype": "bool",
    "is_optional": true
  },

  "is_flattened_decor": {
    "desc": "If true, it means field (of type list or array) serves only as a decorative grouping, and may be 'flattened' (elided, skipped) in object format. E.g., if is_flattened_decor is true then 'foo': { 'bar': 1, 'baz': 2 } is equivalent to 'bar': 1, 'baz': 2",
    "datatype": "bool",
    "is_optional": true
  },

  "is_flattened_multi": {
    "desc": "Whether or not the attribute is shifted from a nested level to the first level in the 'flattened' JSON file (true = flattened, false = not flattened)",
    "datatype": "bool",
    "is_optional": true
  },

  "default_value": {
    "desc": "Default value (for primitive values only). By default, empty string (auto-cast to 0 for numerics, false for booleans)",
    "datatype": "string",
    "is_optional": true
  },

  "default_encoding": {
    "desc": "Integer code indicating how to encode or encrypt the value for storage. 0 by default",
    "datatype": "integer",
    "is_optional": true
  },

  "title": {
    "desc": "UTF8 string, human-readable title",
    "datatype": "string"
  },

  "description": {
    "desc": "UTF8 string, human-readable description",
    "datatype": "text",
    "is_optional": true
  },

  "order": {
    "desc": "Ordinal value of data field",
    "datatype": "integer",
    "is_optional": true
  },

  "is_key": {
    "desc": "Used for top-level fields only. If true , only one object of a given type with the given tuple of values may exist on the system. For non-top-level fields, only one field of this name with this value may exist in the object.",
    "datatype": "bool",
    "is_optional": true
  },

  "is_readonly": {
    "desc": "Whether or not the attribute is read only (true = read only, false = writable)",
    "datatype": "bool",
    "is_optional": true
  },

  "is_writeonce": {
    "desc": "If true, modifies is_readonly to mean field can be changed (from the default value) on new object creation",
    "datatype": "bool",
    "is_optional": true
  },

  "is_submitonce": {
    "desc": "If true, modifies is_readonly to mean field can be changed (from the default value) on new object creation, but if the new object is a resubmission of another computation, the field value is copied from the old computation with the user not being allowed to modify it (in practice, this constraint can only be enforced at the UI level)",
    "datatype": "bool",
    "is_optional": true
  },

  "is_autofill": {
    "desc": " If true, means field cannot be modified by the user - only automatically by the system backend. Attempting to write to such a field is a silent no-op",
    "datatype": "bool",
    "is_optional": true
  },

  "is_optional": {
    "desc": "Whether or not the attribute is optional (true = optional, false = required)",
    "datatype": "bool",
    "is_optional": true
  },

  "is_hidden": {
    "desc": "Whether or not the attribute is hidden from users",
    "datatype": "bool",
    "is_optional": true
  },

  "is_summary": {
    "desc": "If true, field is used by the UI when displaying a short summary view of the object",
    "datatype": "bool",
    "is_optional": true
  },

  "is_virtual": {
    "desc": "If true, field can be batched on when submitting a batch computation",
    "datatype": "bool",
    "is_optional": true
  },

  "is_batch": {
    "desc": "If true, field can be batched on when submitting a batch computation",
    "datatype": "bool",
    "is_optional": true
  },

  "is_weak_reference": {
    "desc": "Optional UTF8 format string specifying a one-line brief description of the object",
    "datatype": "bool",
    "is_optional": true
  },

  "brief": {
    "desc": "Optional UTF8 format string specifying a one-line brief description of the object",
    "datatype": "text",
    "is_optional": true
  },

  "constraint": {
    "desc": "UTF-8 string specifying a constraint for primitive values",
    "datatype": "string",
    "is_optional": true
  },

  "constraint_data": {
    "desc": "UTF-8 string specifying a constraint for primitive values",
    "datatype": "string",
    "is_optional": true
  },

  "constraint_description": {
    "desc": "UTF-8 string documenting a constraint for the user",
    "datatype": "text",
    "is_optional": true
  },

  "link_url": {
    "desc": "An optional UTF-8 string template which is preprocessed (substituting `$_(val)` with the field value) and used as a URL for a link in the user interface.",
    "datatype": "string",
    "is_optional": true
  },

  "_definer_type": {
    "desc": "Object ID of type that defined this field (may be different from current type due to inheritance etc.)",
    "datatype": "string",
    "is_optional": true
  },

  "_included_from_type": {
    "desc": "Object ID of type from which this field was included via field of type 'type'",
    "datatype": "string",
    "is_optional": true
  },

  "_children": {
    "desc": "A list of the field's children",
    "datatype": "hash",
    "is_optional": true
  }

}
